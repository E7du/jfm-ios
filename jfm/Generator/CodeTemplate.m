//
//  CodeTemplate.m
//  jfm
//
//  Created by Jobsz on 8/18/16.
//  Copyright © 2018 E7du. All rights reserved.
//

#import "CodeTemplate.h"
#import "ColumnType.h"

@implementation NSString(Cat)

- (NSString *)catReturn
{
    return [NSString stringWithFormat:@"%@\n", self];
}

- (NSString *)source
{
    return [NSString stringWithFormat:@"%@.m", self];
}

- (NSString *)header
{
    return [NSString stringWithFormat:@"%@.h", self];
}

@end

@implementation CodeTemplate

+ (NSString *)comment
{
    NSDateFormatter *format = [[NSDateFormatter alloc] init];
    [format setDateFormat:@"M/d/y"];
    NSString *date = [format stringFromDate:[NSDate date]];
    [format setDateFormat:@"y"];
    NSString *year = [format stringFromDate:[NSDate date]];
    return [[NSString stringWithFormat:@"//\n// Generated by jfm-ios on %@.\n// Just Fast Model!!!\n// Copyright © %@ E7du. All rights reserved.\n//\n", date, year] catReturn];
}

+ (NSString *)headerImport
{
    return [[@"#import <jfm/jfm.h>" catReturn] catReturn];
}

+ (NSString *)implementationImport:(NSString *)name
{
    return [[[NSString stringWithFormat:@"#import \"%@.h\"", name] catReturn] catReturn];
}

+ (NSString *)interface:(NSString *)name
{
    return [[[NSString stringWithFormat:@"@interface %@ : Model", name] catReturn] catReturn];
}

+ (NSString *)privateInterfaceCategory:(NSString *)name
{
    return [[NSString stringWithFormat:@"@interface %@()", name] catReturn];
}

+ (NSString *)privateInterfaceCategoryProperty:(NSString *)name type:(NSString *)type
{
    return [[NSString stringWithFormat:@"\t%@ _%@;",type, [name lowercaseString]] catReturn];
}

+ (NSString *)implementation:(NSString *)name
{
    return [[[NSString stringWithFormat:@"@implementation %@", name] catReturn] catReturn];
}

+ (NSString *)propertyExternConst:(NSString *)name model:(NSString *)model
{
    return [[[NSString stringWithFormat:@"extern const NSString *%@_%@;",[model uppercaseString], [name uppercaseString]] catReturn] catReturn];
}

+ (NSString *)propertyConst:(NSString *)name model:(NSString *)model
{
    return [[[NSString stringWithFormat:@"NSString *%@_%@ = @\"%@\";",
             [model uppercaseString], [name uppercaseString], name] catReturn] catReturn];
}

+ (NSString *)tableExternConst:(NSString *)table
{
    return [[[NSString stringWithFormat:@"extern const NSString *%@_TABLE;",[table uppercaseString]] catReturn] catReturn];
}

+ (NSString *)tableConst:(NSString *)table version:(NSUInteger)version
{
    return [[[NSString stringWithFormat:@"NSString *%@_TABLE = @\"%@_%@\";", [table uppercaseString], [table lowercaseString], [NSNumber numberWithUnsignedInteger:version]] catReturn] catReturn];
}

+ (NSString *)property:(NSString *)name type:(NSString *)type
{
    NSString *accesser = @"copy";
    NSString *spacer = @"";
    if ([type isEqualToString:[ColumnType objcInteger]]
        || [type isEqualToString:[ColumnType objcUinteger]]
        || [type isEqualToString:[ColumnType objcReal]]) {
        accesser = @"assign";
        spacer = @" ";
    }
    return [[[NSString stringWithFormat:@"@property (nonatomic, %@) %@%@%@;", accesser, type, spacer, [name lowercaseString]] catReturn] catReturn];
}

+ (NSString *)setter:(NSString *)name type:(NSString *)type
{
    NSString *_name = [name lowercaseString];
    id value = _name;
    NSString *setter = [NSString stringWithFormat:@"_%@ = %@;", _name, _name];
    if ([type isEqualToString:[ColumnType objcInteger]]) {
        value = [NSString stringWithFormat:@"[NSNumber numberWithInteger:%@]", _name];
    } else if ([type isEqualToString:[ColumnType objcUinteger]]) {
         value = [NSString stringWithFormat:@"[NSNumber numberWithUnsignedInteger:%@]", _name];
    } else if ([type isEqualToString:[ColumnType objcReal]]) {
        value = [NSString stringWithFormat:@"[NSNumber numberWithDouble:%@]", _name];
    }
    
    return [[[NSString stringWithFormat:
            @"- (void)set%@:(%@)%@\n{\n\t[self set:@\"%@\" value:%@];\n\t%@\n}", [_name capitalizedString], type, _name, _name, value, setter] catReturn] catReturn];
}

+ (NSString *)getter:(NSString *)name type:(NSString *)type defaultVal:(id)defaultVal
{
    NSString *_name = [name lowercaseString];
    if ([type isEqualToString:[ColumnType objcInteger]]) {
        return [[[NSString stringWithFormat:
                  @"- (%@)%@\n{\n\treturn [[self get:@\"%@\" defaultValue:@%@] integerValue];\n}", type, _name, _name, defaultVal] catReturn] catReturn];
    }
    
    if ([type isEqualToString:[ColumnType objcUinteger]]) {
        return [[[NSString stringWithFormat:
                  @"- (%@)%@\n{\n\treturn [[self get:@\"%@\" defaultValue:@(%@)] unsignedIntegerValue];\n}", type, _name, _name, defaultVal] catReturn] catReturn];
    }
    
    if ([type isEqualToString:[ColumnType objcReal]]) {
        return [[[NSString stringWithFormat:
                  @"- (%@)%@\n{\n\treturn [[self get:@\"%@\" defaultValue:@(%@)] doubleValue];\n}", type, _name, _name, defaultVal] catReturn] catReturn];
    }
    
    return [[[NSString stringWithFormat:
             @"- (%@)%@\n{\n\treturn [self get:@\"%@\" defaultValue:@\"%@\"];\n}", type, _name, _name, defaultVal] catReturn] catReturn];
}

+ (NSString *)end
{
    return [[@"@end" catReturn] catReturn];
}

+ (NSString *)primaryKey:(NSString *)key
{
    return [[[NSString stringWithFormat:
              @"+ (NSString *)primaryKey\n{\n\treturn @\"%@\";\n}",key] catReturn] catReturn];
}

+ (NSString *)tableName:(NSString *)table
{
    return [[[NSString stringWithFormat:
              @"+ (const NSString *)tableName\n{\n\treturn %@_TABLE;\n}",[table uppercaseString]] catReturn] catReturn];
}

+ (NSString *)version:(NSUInteger)version
{
    return [[[NSString stringWithFormat:
              @"+ (const NSUInteger)v\n{\n\treturn %ld;\n}",version] catReturn] catReturn];
}

+ (NSString *)stmt:(NSString *)sql
{
    return [[[NSString stringWithFormat:
              @"+ (const NSString *)stmt\n{\n\treturn @\"%@\";\n}",sql] catReturn] catReturn];
}

@end
